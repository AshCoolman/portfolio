var ragh=ragh?ragh:{};ragh.eventMapper=(function(){return{eventsAndListeners:{},addEventListener:function(b,c,d){if(!b){throw"raaagh.EventMapper: .addEventListener(): first parameter must be type from EmberMapper.createEvent()"}if(!c){throw"raaagh.EventMapper: .addEventListener(): second parameter must be listener"}if(!d){console.log("raaagh.EventMapper:",b,c._debugContainerKey,d);throw"raaagh.EventMapper: .addEventListener(): third parameter must be callback "+b+", "+c}if(!this.eventsAndListeners.hasOwnProperty(b)){this.eventsAndListeners[b]=[]}var a=this.eventsAndListeners[b].filter(function(e){return(e.listener==c)});if(a.length==0){this.eventsAndListeners[b].push({listener:c,callback:d})}return b},removeEventListener:function(a,b){assert(this.eventsAndListeners[a],"raaagh.EventMapper: this.eventsAndListeners["+a+"] is undefined");if(this.eventsAndListeners[a]){this.eventsAndListeners[a]=this.eventsAndListeners[a].filter(function(c){return(c.listener!=b)})}},trigger:function(a,b){var c=ragh.MappedEvent.create(a,b);if(!this.eventsAndListeners.hasOwnProperty(c.type)){this.eventsAndListeners[c.type]=[]}this.eventsAndListeners[c.type].filter(function(d){d.callback.call(d.listener,c.type,c.data);return true})}}}());ragh.MappedEvent=ragh.MEvt=ragh.ME={type:null,data:null,create:function(a,b){if(!a){throw"ragh.MappedEvent.create() expects first parameter to be a String describing event type"}if(typeof a!="string"){throw"ragh.MappedEvent.create() expects first parameter to be String describing event type. Currently "+(typeof a)}this.type=a;this.data=b;return this}};if(!this.assert){"use strict";this.assert=function(c,b,a){if(!c){console.info(b)}else{if(a){console.info(a)}}}}if(!Array.prototype.filter){Array.prototype.filter=function(b){var a=this.length>>>0;if(typeof b!="function"){throw new TypeError()}var e=[];var d=arguments[1];for(var c=0;c<a;c++){if(c in this){var f=this[c];if(b.call(d,f,c,this)){e.push(f)}}}return e}};