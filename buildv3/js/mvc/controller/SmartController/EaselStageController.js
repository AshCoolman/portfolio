App.EslStageController=App.SmartController.extend({pendingEE:[],className:"EslStageController",init:function(){return this._super()},view_didInsertElement:function(a){this.pendingEE=[];App.eventMapper.addEventListener("eslViewAddedEsl",this,this.doEslViewAddedEsl);App.eventMapper.addEventListener("viewRemovedEsl",this,this.doViewRemovedEsl);this._super(a);this.tryProcessPendingEE()},view_willDestroyElement:function(){this._super();App.eventMapper.removeEventListener("eslViewAddedEsl",this);App.eventMapper.removeEventListener("viewRemovedEsl",this);this.pendingEE=[]},doEslViewAddedEsl:function(a,b){this.pendingEE.push(b);this.tryProcessPendingEE()},doViewRemovedEsl:function(a,b){this.pendingEE.filter(function(c){return(b.view!=c.view)})},tryProcessPendingEE:function(){if(this.view){if(!this.view.addEslEnt){throw"EslStageController._processQ() the view ( subclass ) does not implememnt addEslEnt()"}this.pendingEE.forEach(function(a){return function(b,c,d){a.view.addEslEnt(b.label,b.view,b.parentEslObj)}}(this));this.pendingEE=[]}else{throw"tryProcessPendingEE() view not set"}}});App.register("controller:esl-stage",App.EslStageController,{singleton:false});