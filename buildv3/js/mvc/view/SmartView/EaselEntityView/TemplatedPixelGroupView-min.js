App.TemplatedPixelGroupView=App.EslEntityView.extend({templateName:"templated-pixel-group",className:"TemplatedPixelGroupView",label:"templated-pixel-group",isCreateFromImage:false,pixelHash:{},pixelsFromImgMap:null,pixelsFromImgList:null,addPixel:function(c){var d=this.get("pixelHash"),b=String(c.x),a=String(c.y);if(!d[b]){d[b]={}}d[b][a]=c;this.set("pixelhash",d)},removePixel:function(c){var d=this.get("pixelHash"),b=String(c.x),a=String(c.y);coordArr=d[b][a];coordArr.splice(coordArr.indexOf(c),1);this.set("pixelhash",d)},shp:null,handle:null,imgPreloadId:"question-pixel",eslObjSettings:{width:App.PIXEL_SIZE,height:App.PIXEL_SIZE,x:0,y:0,fromController:["x","y","width","height","visible"]},didInsertElement:function(){this._super();var b=App.preloadedImages[this.get("imgPreloadId")],d="\n"+this.get("imgPreloadId")+"\n";if(b){var a=function(e){return function(n,m,l,i,h,f,q){var j=(App.USER_X+(n+2)*App.PIXEL_SIZE),k=(App.USER_Y+(0.5-f+m)*App.PIXEL_SIZE);d+='{{controlWithVars "cogged-pixel" cogged-pixel x='+j+" y="+k+" height="+App.PIXEL_SIZE+" width="+App.PIXEL_SIZE+' col="'+i.color+'"}}\n';i.x2d=j;i.y2d=k;if(e.get("isCreateFromImage")){var o=e.get("pixelsFromImgList")||[],g=new createjs.Container(),p=new createjs.Shape();g.addChild(p);p.width=App.PIXEL_SIZE;p.height=App.PIXEL_SIZE;p.graphics.clear();p.graphics.beginFill(i.color);p.graphics.drawRect(0,0,p.width,p.height);g.regX=App.PIXEL_SIZE/2;g.regY=App.PIXEL_SIZE/2;g.x=j;g.y=k;e.get("eslObj").addChild(g);i.container=g;i.shp=p;o.push(i);e.set("pixelsFromImgList",o)}}}(this),c=function(e){return function(f){console.log("map is completed\n"+d);if(e.get("isCreateFromImage")){e.set("pixelsFromImgMap",f)}}}(this);ragh.createJsonMapFromImage(b,a,c)}},doShowPixelChildrenTo:function(a,b){var f=this.get("handle");console.log("view.doShowPixelInChildren",this.handle.children.length);f.visible=true;var g=[],i=f.children,e=b/i.length;for(var d=0;d<i.length;d++){g.push(d)}g.sort(function(){return 0.5-Math.random()});for(var h=0;h<f.children.length;h++){var d=g[h];f.children[d].visible=!a;setTimeout(function(k,c,j){return function(){k.handle.children[c].visible=j}}(this,d,a),e*h)}},doShowLineInChildren:function(b){var i=this.get("eslObj"),l=this.get("shp"),h=[],f=this.handle.children,a=0,e=0,g,d;i.visible=true;for(var k=0;k<f.length;k++){a=Math.max(f[k].y,a);e=Math.min(f[k].y,e)}a=a/App.PIXEL_SIZE;e=e/App.PIXEL_SIZE;g=Math.abs(a-e);d=b/g;for(var k=0;k<f.length;k++){var j=f[k];j.visible=false;setTimeout(function(c,m){return function(){m.visible=true}}(this,j),d*Math.abs(a-j.y/App.PIXEL_SIZE))}},override_createEsl:function(){var b,a;this.set("shp",b=new createjs.Shape());this.set("handle",a=new createjs.Container());a.addChild(b);a.addEventListener("mousedown",(function(c){return function(d){var e={x:d.target.x-d.stageX,y:d.target.y-d.stageY};d.addEventListener("mousemove",function(f){f.target.x=c.snap(f.stageX+e.x);f.target.y=c.snap(f.stageY+e.y)})}}(this)));return a},override_draw:function(b){Em.assert("App.PixelView.draw(): method can't run without eslObj being created. eslObj = "+this.get("eslObj"),this.get("eslObj"));Em.assert("App.PixelView.draw(): method can't run without handle being created. handle = "+this.handle,this.handle);Em.assert("App.PixelView.draw(): method can't run without shp being created. shp = "+this.shp,this.shp);var a=b?b:this.get("eslObj"),d=this.get("shp"),c=this.get("handle");a.x=Number(a.x);a.y=Number(a.y);Em.assert('App.PixelView.draw(): value of x in eslObj is not of type "number"',!isNaN(a.x));Em.assert('App.PixelView.draw(): value of y in eslObj is not of type "number"',!isNaN(a.y));Em.assert('App.PixelView.draw(): value of width in eslObj is not of type "number" '+a.width,!isNaN(a.width));Em.assert('App.PixelView.draw(): value of height in eslObj is not of type "number" '+a.height,!isNaN(a.height));d.regX=a.width/2;d.regY=a.height/2;d.width=a.width;d.height=a.height;d.graphics.clear();if(App.DEBUG){d.graphics.beginFill("#FF0000");d.graphics.drawRect(0,0,d.width,d.height)}c.x=Number(a.x);c.y=Number(a.y);c.visible=a.visible;this.set("handle",c);this.set("shp",d)},override_reDraw:function(){}});